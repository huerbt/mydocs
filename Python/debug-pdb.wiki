debug-pdb.wiki          命令行调试(使用 pdb进行调试)           Oct 15, 2018
Author: BuJiBuji HuYi
Summary:
    pdb 是 python 自带的一个包，为
    python程序提供了一种交互的源代码调试功能，主要特性包括设置断点、单步调试、进入函数调试、查看当前代码、查看栈片段、动态改变变量的值等。pdb提供了一些常用的调试命令。pdb调试有个明显的缺陷就是对于多线程，远程调试等支持得不够好。
    
    
===========================================================================
== Content ==

1. 在需要调试的代码前加上一句：
    -  import pdb
    -  pdb.set_trace() 
2. 开始调试，运行自己的程序，会停留在 pdb.set_trace() 处.
    - 选择 n+enter 可以执行当前的 statement。在第一次按下了 n+enter 之后可以直接按 enter 表示重复执行上一条 debug 命令。

    - 退出 debug：使用 quit 或者 q 可以退出当前的 debug，但是 quit会以一种非常粗鲁的方式退出程序，其结果是直接 crash。

    - 打印变量的值：如果需要在调试过程中打印变量的值，可以直接使用 p
      加上变量名，但是需要注意的是打印仅仅在当前的 statement
      已经被执行了之后才能看到具体的值，否则会报 NameError: <
      exceptions.NameError … ....> 错误。
      
    -  使用 c 可以停止当前的 debug 使程序继续执行。
    
    - 显示代码：在 debug
      的时候不一定能记住当前的代码块，如要要查看具体的代码块，则可以通过使用
      list 或者 l 命令显示。list 会用箭头 -> 指向当前 debug 的语句。
      
    - 可以直接使用 s进入函数块。函数里面的单步调试与上面的介绍类似。如果不想在函数里单步调试可以在断点处直接按r 退出到调用的地方。

    - 在调试的时候动态改变值,则应该使用!变量名=新的值
